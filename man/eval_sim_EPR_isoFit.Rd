% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eval_sim_EPR_isoFit.R
\name{eval_sim_EPR_isoFit}
\alias{eval_sim_EPR_isoFit}
\title{Least-Squares Fitting of Isotropic EPR spectra by Simulations}
\usage{
eval_sim_EPR_isoFit(
  data.spectrum.expr,
  Intensity.expr = "dIepr_over_dB",
  Intensity.sim = "dIeprSim_over_dB",
  instrum.params = NULL,
  path_to_dsc_par,
  origin = "xenon",
  B.unit = "G",
  nuclear.system.noA,
  lineG.content = 0.5,
  lineSpecs.form = "derivative",
  optim.method = "neldermead",
  optim.params.init,
  optim.params.lower = NULL,
  optim.params.upper = NULL,
  Nmax.evals = 2000,
  tol.step = 1e-06,
  sim.check = TRUE
)
}
\arguments{
\item{data.spectrum.expr}{Data frame object ... TBC ...}

\item{Intensity.expr}{Character string ... TBC ...}

\item{Intensity.sim}{Character string ... TBC ...}

\item{instrum.params}{Named numeric vector ... TBC ...}

\item{path_to_dsc_par}{Character string, path (can be also gathered by \code{\link[base]{file.path}})
to \code{.DSC/.dsc} or \code{.par} (depending on the OS, see \code{origin} argument)
\code{text} files including all instrumental parameters from the EPR machine.
\strong{Default}: \code{path_to_dsc_par = NULL} in case if the \code{instrum.params}
is already defined. IF ARGUMENT \code{instrum.params = NULL} then BOTH \code{path_to_dsc_par}
AS WELL AS \code{origin} MUST BE DEFINED !}

\item{origin}{String, corresponding to software which was used to acquire the EPR spectra
on BRUKER spectrometers, because the files are slightly different depending on whether they
were recorded by the windows based softw. ("WinEpr",\code{origin = "winepr"}) or by the Linux
one ("Xenon"). \strong{Default}: \code{origin = NULL} in case no file is used to extract
the parameters (i.e. exactly if \code{path_to_dsc_par = NULL}).}

\item{B.unit}{Character string pointing to unit of magnetic flux density which is to be presented
on \eqn{B} abscissa of the EPR spectrum, like \code{"G"} (`Gauss`) or \code{"mT"} (`millitesla`),
\strong{default}: \code{B.unit = "G"}. THE UNIT MUST BE SHARED ACROSS ALL B ARGUMENTS
like `cf` and `sw` within the \code{instrum.params} AS WELL AS THOSE IN \code{lineGL.DeltaB} !}

\item{nuclear.system.noA}{List or nested list ... TBC ... without estimated hyperfine coupling constant values}

\item{lineG.content}{Numeric value ...}

\item{lineSpecs.form}{Character string describing either \code{"derivative"} (\strong{default})
or \code{"integrated"} (i.e. \code{"absorption"} which can be used as well) line form
of the analyzed EPR spectrum/data.}

\item{optim.method}{Character string ... TBC ...}

\item{optim.params.init}{Numeric vector with estimated ... TBC ...1. element = g-value, 2. element = Gaussian
linewidth, 3. element = Lorentzian linewidth, 4. element = baseline constant,5... elements hyperfine coupling
constants in `MHz`}

\item{optim.params.lower}{Numeric vector (with the length of \code{optim.params.init}) with the lower bound constraints.}

\item{optim.params.upper}{Numeric vector (with the length of \code{optim.params.init}) with the upper bound constraints.}

\item{Nmax.evals}{Numeric value corresp. to maximum number of iterations/evaluations.}

\item{tol.step}{Numeric value describing the smallest optimization step (tolerance) to stop the optimization.}

\item{sim.check}{Logical, whether to return simple list with overlay plot and the best fitting parameters in a vector.}
}
\value{
List with following components depending on \code{sim.check} ... TBC ...
}
\description{
A short description...
}
\details{
Additional details...
}
\examples{
\dontrun{
TODO
TODO
}


}
\seealso{
Other Simulations and Optimization: 
\code{\link{eval_sim_EPR_iso_combo}()},
\code{\link{eval_sim_EPR_iso}()},
\code{\link{optim_EPR_by_nloptr}()},
\code{\link{quantify_EPR_Sim_series}()}
}
\concept{Simulations and Optimization}
