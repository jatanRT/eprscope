% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eval_sim_EPR_iso.R
\name{eval_sim_EPR_iso}
\alias{eval_sim_EPR_iso}
\title{Simulation of Isotropic EPR Spectra}
\usage{
eval_sim_EPR_iso(
  g.iso = 2.00232,
  instrum.params = c(Bcf = 3500, Bsw = 200, Npoints = 2048, mwGHz = 9.8),
  path_to_dsc_par = NULL,
  origin = NULL,
  B.unit = "G",
  nuclear.system = NULL,
  natur.abund = FALSE,
  lineSpecs.form = "derivative",
  lineGL.DeltaB = list(1, NULL),
  lineG.content = 1,
  Intensity.sim = "dIeprSim_over_dB",
  plot.sim.interact = FALSE
)
}
\arguments{
\item{g.iso}{Numeric value, guess of the isotropic \eqn{g}-factor. It may also possess a `NULL`
value if the \eqn{g} corresponding to "central field" is equal to `g.iso`.
\strong{Default}: \code{g.iso = 2.00232} (the approximate \eqn{g} of the free electron).}

\item{instrum.params}{Named numeric vector containing instrumental parameters required
for the simulation =>
\tabular{ll}{
\code{Bcf} \tab "central field" (magnetic flux density, \eqn{B_{\text{CF}}}) \cr
\code{Bsw} \tab "sweep width" (magnetic flux density recording region,
\eqn{B_{\text{SW}}}) \cr
\code{Npoints} \tab number of spectral points (corresponding to resolution) within
the "sweep width" \cr
\code{mwGHz} \tab applied microwave frequency in `GHz` to record the continuous wave (CW)
EPR spectrum \cr
}
\strong{Default} values are chosen to cover the EPR spectra of common organic radicals.
If \code{instrum.params = NULL} then parameters are provided by \code{path_to_dsc_par}
as well as by \code{origin}.}

\item{path_to_dsc_par}{Character string, path (can be also gathered by \code{\link[base]{file.path}})
to \code{.DSC/.dsc} or \code{.par} (depending on the OS, see \code{origin} argument)
\code{text} files including all instrumental parameters from the EPR machine.
\strong{Default}: \code{path_to_dsc_par = NULL} in case if the \code{instrum.params}
is already defined. IF ARGUMENT \code{instrum.params = NULL} then BOTH \code{path_to_dsc_par}
AS WELL AS \code{origin} MUST BE DEFINED !}

\item{origin}{String, corresponding to software which was used to acquire the EPR spectra
on BRUKER spectrometers, because the files are slightly different depending on whether they
were recorded by the windows based softw. ("WinEpr",\code{origin = "winepr"}) or by the Linux
one ("Xenon"). \strong{Default}: \code{origin = NULL} in case no file is used to extract
the parameters (i.e. exactly if \code{path_to_dsc_par = NULL}).}

\item{B.unit}{Character string pointing to unit of magnetic flux density which is to be presented
on \eqn{B} abscissa of the EPR spectrum, like \code{"G"} (`Gauss`) or \code{"mT"} (`millitesla`),
\strong{default}: \code{B.unit = "G"}. THE UNIT MUST BE SHARED ACROSS ALL B ARGUMENTS
like `cf` and `sw` within the \code{instrum.params} AS WELL AS THOSE IN \code{lineGL.DeltaB} !}

\item{nuclear.system}{List containing the information about groups of equivalent nuclei
interacting with the unpaired electron, e.g. like \code{nuclear.system = list("14N",1,45)}.
This corresponds to one group of "14N" interacting nuclei where \strong{the second number}
denotes \strong{the number of nuclei} within the group and \strong{the third number}
is the \strong{guess of the hyperfine coupling constant in MHz}. Therefore, in summary
it refers to \eqn{A(1\times ^{14}\text{N}) = 45~\text{MHz}}. If more complex interaction
is considered, e.g. like \eqn{A(3\times ^{1}\text{H}) = 5.06~\text{MHz} +
A(6\times ^{1}\text{H}) = 17.64~\text{MHz}}, such system must be defined by nested lists like
\code{nuclear.system = list(list("1H",3,5.06),list("1H",6,17.64))}...etc. Actually,
the number of groups is limited to 6 which covers the vast majority of organic radicals
and can be extended in the future. \strong{Default}: \code{nuclear.system = NULL} in case
if no interaction with electron surrounding nuclei is considered and only single
line EPR spectrum is expected.}

\item{natur.abund}{Logical, whether the natural abundance of the interacting nuclei
is taken into the calculation of intensity pattern of the simulated EPR spectrum.
\strong{Default}: \code{natur.abund = FALSE} which is to be kept for the calculation of a single-line
EPR spectrum without the hyperfine splitting.}

\item{lineSpecs.form}{Character string describing either \code{"derivative"} (\strong{default})
or \code{"integrated"} (i.e. \code{"absorption"} which can be used as well) line form
of the analyzed EPR spectrum/data.}

\item{lineGL.DeltaB}{List of two values referred to \emph{Gaussian} (G) and \emph{Lorentzian} (L)
spectral line-forms, respectively. For the "pure" \emph{Gaussian} only the first value is numeric
and the second one is \code{NULL} => e.g. like \code{lineGL.DeltaB = list(1,NULL)} (\strong{default}).
For the "pure" \emph{Lorentzian} the opposite expression must be used => e.g. like
\code{lineGL.DeltaB = list(NULL,0.5)}. If the linear combination of both
line forms is taken into account (see \code{lineG.content}), that is so called \emph{pseudo-Voightian},
then both values are numeric (e.g. like \code{lineGL.DeltaB = list(0.5,0.5)}) and are related
to \emph{Gaussian} and \emph{Lorentzian} forms, respectively. The `DeltaB` corresponds to either
\eqn{\Delta B_{\text{pp}}} (if \code{lineSpecs.form = "derivative"}) or to \eqn{FWHM}
(if \code{lineSpecs.form = "integrated"} or if \code{lineSpecs.form = "absorption"}).
The unit of values must coincide with those used in \code{instrum.params} as well as with \code{B.unit}.}

\item{lineG.content}{Numeric value between `0` and `1` referring to content of \emph{Gaussian} line form.
If \code{lineG.content = 1} (\strong{default}) it corresponds to "pure" \emph{Gaussian} line form
and if \code{lineG.content = 0} it corresponds to \emph{Lorentzian} one. The value from (0,1)
(e.g. like \code{lineG.content = 0.5}) represents the linear combination (for the example above
with the coefficients 0.5 and 0.5) of both line forms => so called \emph{pseudo-Voightian}.}

\item{Intensity.sim}{Character string pointing to column of simulated EPR intensity within the related
data frame, which is also available in the output list. \strong{Default}: \code{Intensity.sim = "dIeprSim_over_dB"}.}

\item{plot.sim.interact}{Logical, whether to display the simulated spectrum by interactive `plotly` graph
(see also \code{\link{plot_EPR_Specs2D_interact}}). If \code{plot.sim.interact = FALSE} (\strong{dafault}),
then the output contains the data frame as well as `ggplot2` based plot of the simulated EPR spectrum
within a list.}
}
\value{
...list...tbc or interactive simulated `plotly` spectrum
}
\description{
A short description...tbc...of the EPR simulation
}
\details{
Additional details...
}
\examples{
## Simulation of luteolin radical anion with the following
## four hyperfine coupling constants A(1 x 1H) = 3.1 MHz,
## A(1 x 1H) = 2.8 MHz, A(1 x 1H) = 8.0 MHz
## and A(1 x 1H) = 4.1 MHz. One may check out the simulation
## at https://doi.org/10.1016/j.electacta.2013.06.136 (Fig. 6)
sim.luteol <- eval_sim_EPR_iso(g.iso = 2.00495,
                              instrum.params = c(Bcf = 339.367,
                                                 Bsw = 5.9,
                                                 Npoints = 2048,
                                                 mwGHz = 9.5294),
                              nuclear.system = list(list("1H",1,3.1),
                                                    list("1H",1,2.8),
                                                    list("1H",1,8.0),
                                                    list("1H",1,4.1)),
                              lineGL.DeltaB = list(0.034,0.034),
                              lineG.content = 0.6,
                              B.unit = "mT",
                              natur.abund = TRUE)
sim.luteol$plot + ggplot2::coord_cartesian(xlim = c(338,341))
#
## ...and the corresponding data frame =>
utils::head(sim.luteol$df)


}
\seealso{
Other Simulations and Optimization: 
\code{\link{eval_sim_EPR_isoFit}()},
\code{\link{eval_sim_EPR_iso_combo}()},
\code{\link{optim_for_EPR_fitness}()},
\code{\link{quantify_EPR_Sim_series}()},
\code{\link{smooth_EPR_Spec_by_npreg}()}
}
\concept{Simulations and Optimization}
