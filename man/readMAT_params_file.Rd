% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readMAT_params_file.R
\name{readMAT_params_file}
\alias{readMAT_params_file}
\title{Read all Parameters (incl. the Simulation ones) from \emph{MATLAB} \code{.mat} File}
\usage{
readMAT_params_file(path_to_MAT, str.var = NULL, field.var = NULL)
}
\arguments{
\item{path_to_MAT}{Character string, path to \code{.mat} MATLAB file with all variables saved in workspace.
The file path can be also defined by \code{\link[base]{file.path}}.}

\item{str.var}{Character string, \code{structure/variable}, which may contain \code{fields}, such as \code{Sys}
and \code{g} => \strong{Sys}.g, respectively. \strong{Default}: \code{str.var = NULL}.}

\item{field.var}{Character string, \code{field variable after 'dot'}, which is available only for certain
structures/variables, see e.g. example above (Sys.\strong{g}), therefore
the \strong{default} value is \code{NULL} and the \code{string} \strong{is applied only for structures with fields}.}
}
\value{
Unless the \code{str.var} and/or \code{field.var} are not specified, the output is \code{list} with all original
  parameters/structures from MATLAB file. Otherwise, the function returns either numeric/character \code{vector/value}
  or list depending on \code{class} of the original parameter/field variable.
}
\description{
Function is based on the \code{\link[R.matlab]{readMat}} and provides the content reading of a \code{.mat}
  simulation file from MATLAB including structures/variables and fields. It can be also used to read and store
  simulated EPR spectrum in the form of R data frame.
}
\examples{
## loading the package built-in
## `Aminoxyl_radical_a.mat` file as an example
aminoxyl.mat.file <-
  load_data_example(file = "Aminoxyl_radical_a.mat")
#
## reading the entire `mat` file as list
## and assign variable
aminoxyl.mat.list <-
  readMAT_params_file(aminoxyl.mat.file)
#
## read the `Sim1` structure/variable content into list
aminoxyl.mat.sim1 <-
  readMAT_params_file(aminoxyl.mat.file,
                      str.var = "Sim1")
#
## list preview
aminoxyl.mat.sim1
#
## compare the previous simulation parameters with
## those obtained by `eval_sim_EPR_isoFit()`
## function (look at the corresponding examples)
#
## alternatively the `Sim1` (its dimension > 2)
## can be also read by the following command
## however, the returned output has a complex
## array-list structure
aminoxyl.mat.list$Sim1[, , 1]
#
## read the `Sim1` structure/variable
## and the field `Nucs` corresponding to nuclei
## considered in the EPR simulation
aminoxyl.mat.sim1.nucs <-
  readMAT_params_file(aminoxyl.mat.file,
                      str.var = "Sim1",
                      field.var = "Nucs")
#
## preview
aminoxyl.mat.sim1.nucs
#
## reading the magnetic flux density
## `B` column/vector corresponding to simulated
## and experimental EPR spectrum
aminoxyl.B.G <-
  readMAT_params_file(aminoxyl.mat.file,
                      str.var = "B")
#
## preview of the first 6 values
aminoxyl.B.G[1:6]
#
## reading the intensity related to simulated
## EPR spectrum
aminoxyl.sim.fitSpec <-
  readMAT_params_file(aminoxyl.mat.file,
                      str.var = "fit1",
                      field.var = "fitSpec")
#
## preview of the first 6 values
aminoxyl.sim.fitSpec[1:6]
#
## The last two examples can be used
## to load the simulated EPR spectrum
## by the `EasySpin` from `mat` file =>
simulation.aminoxyl.spectr.df <-
  data.frame(Bsim_G = aminoxyl.B.G,
             dIeprSim_over_dB = aminoxyl.sim.fitSpec)
#
## preview
head(simulation.aminoxyl.spectr.df)


}
\seealso{
Other Data Reading: 
\code{\link{readEPR_Exp_Specs}()},
\code{\link{readEPR_Exp_Specs_kin}()},
\code{\link{readEPR_Exp_Specs_multif}()},
\code{\link{readEPR_Sim_Spec}()},
\code{\link{readEPR_param_slct}()},
\code{\link{readEPR_params_slct_kin}()},
\code{\link{readEPR_params_slct_quant}()},
\code{\link{readEPR_params_slct_sim}()},
\code{\link{readEPR_params_tabs}()},
\code{\link{readEPR_solvent_props}()}
}
\concept{Data Reading}
