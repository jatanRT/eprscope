% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_ECh_VoC_amperogram.R
\name{plot_ECh_VoC_amperogram}
\alias{plot_ECh_VoC_amperogram}
\title{Plot Voltammogram or Chronoamperogram from (Spectro)Electrochemical Experiment}
\usage{
plot_ECh_VoC_amperogram(
  data.voltamm,
  x = "E_V",
  x.unit = "V",
  Current = "I_uA",
  Current.unit = "uA",
  xlim = NULL,
  Ilim = NULL,
  line.color = "darkviolet",
  line.width = 0.75,
  line.type = 1,
  theme.basic = "theme_gray",
  axis.title.size = 15,
  axis.text.size = 14,
  border.line.color = "black",
  border.line.width = 0.5,
  border.line.type = 1,
  ref.electrode = NULL,
  plot.interact = FALSE,
  ticks = "out",
  grid = TRUE
)
}
\arguments{
\item{data.voltamm}{Data frame (table) object including required columns like \code{Potential}
(\eqn{E}) and/or \code{Time} (\eqn{t}) as well as \code{Current} (\eqn{I}). Even though an arbitrary
column label can be used, the best option is to use labels e.g. \code{E_V}, \code{E_mV}, \code{time_s},
\code{I_uA} or \code{I_mA}.}

\item{x}{Character string pointing to \code{x}-axis/column quantity, in the original \code{data.voltamm},
like \strong{potential} (e.g. \code{x = "E_V"}, \code{x = "E_mV"}) or \strong{time} (e.g. \code{x = "time_s"},
\code{x = "time_min"} or \code{x = "time_ms"}). \strong{Default}: \code{x = "E_V"} (potential in volts).}

\item{x.unit}{Character string pointing to \code{x}-quantity unit. There are following units available:
\code{x.unit = "V"}, \code{x.unit = "mV"} (in case of voltammetry, \code{x} corresponds to potential)
as well as \code{x.unit = "s"}, \code{x.unit = "ms"} or \code{x.unit = "min"} (in case of chronoamperometry,
\code{x} corresponds to time). \strong{Default}: \code{x.unit = "V"}.}

\item{Current}{Character string indicating the \code{Current}(\eqn{I})-axis/column quantity in the original
\code{data.voltamm} object. \strong{Default}: \code{Current = "I_ua"} (current in \eqn{\text{ÂµA}}).}

\item{Current.unit}{Character string pointing to \code{Current} quantity unit like \code{Current.unit = "uA"}
(microamps, \strong{default}), \code{Current.unit = "A"}, \code{Current.unit = "mA"} and \code{Current.unit = "nA"}.}

\item{xlim}{Numeric vector of the \code{x}-quantity visual border limits, e.g. \code{xlim = c(-100,400)}
(potential in "mV", in case of voltammetry) or \code{xlim = c(0,1000)} (time in seconds,
in case of chronoamperometry). \strong{Default}: \code{xlim = NULL} actually defining the entire \code{x}-range
from the original dataset.}

\item{Ilim}{Numeric vector characterizing the visual border limits of the current, e.g. \code{Ilim = c(-0.05,0.2)},
corresponding to current in milliamps. \strong{Default}: \code{Ilim = NULL} related to the entire current (\eqn{I}) range
from the original dataset.}

\item{line.color}{Character string pointing to line color of the voltammogram / chronoamperogram. All \pkg{ggplot2} compatible
colors are allowed, e.g. \code{line.color = "blue"}. \strong{Default}: \code{line.color = "darkviolet"}.}

\item{line.width}{Numeric, linewidth of the plot line in \code{mm}, \strong{default}: \code{line.width = 0.75}.}

\item{line.type}{Character string or integer corresponding to width of the voltammogram/chronoamperogram line.
Following types can be specified: \code{0 = "blank"}, \code{1 = "solid"} (\strong{default}), \code{2 = "dashed"},
\code{3 = "dotted"}, \code{4 = "dotdash"}, \code{5 = "longdash"} and \code{6 = "twodash"}.}

\item{theme.basic}{Character string calling a \pkg{ggplot} theme base. The following ones are defined:
\describe{
  \item{\code{"theme_gray"}}{(\strong{default} one) => gray background with the white grid lines}
  \item{\code{"theme_bw"}}{ => white background with thin gray grid lines, the theme is suggested \strong{for publications}}
  \item{\code{"theme_light"}}{ => similar to \code{theme_bw()} but without the pronounced axis black lines}
  \item{\code{"theme_classic"}}{ => without grid, pronounced axis lines, however no opposite ones}
  \item{\code{"theme_linedraw"}}{ => pronounced axis lines (both for the origin and the opposite) as well as the grid ones,
  theme is suggested \strong{for publications} if the \code{grid} is set to \code{FALSE}}
}}

\item{axis.title.size}{Numeric, axis text title size in \code{pt}. \strong{Default}: \code{axis.title.size = 15}.}

\item{axis.text.size}{Numeric, text size in \code{p}t for the axes unit values/descriptions,
\strong{default}: \code{axis.text.size = 14}.}

\item{border.line.color}{Character string referring to color of the plot graph/panel border line. \strong{Default}:
\code{border.line.color = "black"}.}

\item{border.line.width}{Numeric, width (in \code{mm}) of the plot graph/panel border line, \strong{default}:
\code{border.line.width = 0.5}.}

\item{border.line.type}{Character string or integer corresponding to width of the plot graph/panel border line. Following types
can be specified: \code{0 = "blank"}, \code{1 = "solid"} (\strong{default}), \code{2 = "dashed"}, \code{3 = "dotted"},
\code{4 = "dotdash"}, \code{5 = "longdash"} and \code{6 = "twodash"}.}

\item{ref.electrode}{Character string corresponding to reference electrode label, e.g.
\code{ref.electrode = "Ag-quasiref"} or \code{ref.electrode = "Fc/Fc+"}. \strong{Default}: \code{ref.electrode = NULL}
(displayed potential is not related to any \code{ref.electrode}).}

\item{plot.interact}{Logical, whether the voltammogram or chronoamperogram is visualized as an interactive plot
by \pkg{plotly} (\code{plot.interact = TRUE}). \strong{Default}: \code{plot.interact = FALSE}
(static plot by \pkg{ggplot2} is displayed).}

\item{ticks}{Character string corresponding to pointing direction of the axis ticks, either pointing into
the panel graph or outwards (\strong{default}). If \code{ticks = "in"} also the opposite axis ticks are displayed.}

\item{grid}{Logical, whether to display the \code{grid} within the panel/graph, \strong{default}: \code{grid = TRUE}.}
}
\value{
Graphical representation (list object) of voltammogram or chronoamperogram either in static
  form by \pkg{ggplot2} (\code{plot.interact = FALSE}) or in interactive form by \pkg{plotly}
  (\code{plot.interact = TRUE}).
}
\description{
Visualization of voltammogram or chronoamperogram either by \pkg{ggplot2} (static plot) or \pkg{plotly}
  (interactive one) package. The corresponding data frame for the plot can be created from the ASCII text file,
  generated by the potentiostat, using the \code{\link[data.table]{fread}} (see also section Examples).
}
\examples{
## loading package built-in example file =>
## `.txt` file generated by the IVIUM potentiostat software
triarylamine.path.cv <-
load_data_example(file = "Triarylamine_ECh_CV_ivium.txt")
## the data frame contains following variables:
## time, desired potential, current and actual/applied
## potential
triarylamine.data.cv <-
  data.table::fread(file = triarylamine.path.cv,
                    skip = 2,
                    col.names = c("time_s",
                                  "E_V_des",
                                  "I_A",
                                  "E_V_app")
                   )
## data frame preview
head(triarylamine.data.cv)
#
## simple voltammogram plot with ref. electrode string:
plot_ECh_VoC_amperogram(data.voltamm =
                          triarylamine.data.cv,
                        x = "E_V_app",
                        Current = "I_A",
                        Current.unit = "A",
                        ref.electrode = "Ag-quasiref."
                       )
#
## simple chronoamperogram plot with "theme_bw" theme
## and `ticks` pointing into the graph panel (ticks = "in")
plot_ECh_VoC_amperogram(data.voltamm = triarylamine.data.cv,
                        x = "time_s",
                        x.unit = "s",
                        Current = "I_A",
                        line.color = "darkred",
                        line.type = 3,
                        Current.unit = "A",
                        theme.basic = "theme_bw",
                        ticks = "in"
                       )
#
## simple interactive "darkgreen" voltammogram
plot_ECh_VoC_amperogram(data.voltamm = triarylamine.data.cv,
                        x = "E_V_app",
                        Current = "I_A",
                        Current.unit = "A",
                        line.color = "darkgreen",
                        plot.interact = TRUE
                       )


}
\concept{EPR Spectroelectrochemistry}
