% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_time_to_var.R
\name{convert_time_to_var}
\alias{convert_time_to_var}
\title{Convert Time into Variable Linearly Changing on Time}
\usage{
convert_time_to_var(time, time.unit = "s", var0, var.switch = NULL, var.rate)
}
\arguments{
\item{time}{Numeric, value or vector corresponding to time (points) upon which the variable \code{var}
is changed.}

\item{time.unit}{Character/String \strong{time unit} defined by \code{"s"},\code{"min"} or \code{"h"}.
\strong{Default}: \code{time.unit = "s"}}

\item{var0}{Numeric, the initial/starting value (\strong{INCL. ALSO NEGATIVE SIGN, if required}, e.g. like
negative electrochemical potential) of variable (\code{var}) from which the linear \code{var} change
is taking place.}

\item{var.switch}{Numeric, the switching value, when a linear \strong{cyclic change} (or 'triangular ramp')
of \code{var} upon time is applied/happening (e.g. like cyclic voltammetry).
\strong{Default}: \code{var.switch = NULL} (in case there is no cyclic change).}

\item{var.rate}{Numeric, corresponding to rate of linear \code{var} change (\strong{INCL. ALSO NEGATIVE SIGN,
if required}, e.g. like in case of electrochemical reduction or sample cooling).}
}
\value{
Numeric value or vector of variable (e.g. like electrochem. potential or temperature...etc)
  linearly dependent upon time.
}
\description{
Conversion of time into variable \code{var} which is linearly changed upon time like
\deqn{var = var0 + rate\times t}
This is especially suitable for time conversion of EPR time series experiments
(see e.g. \code{\link{readEPR_Exp_Specs_kin}}) simultaneously performed either during
electrochemical/voltammetric or variable temperature experiment.
}
\examples{
## Calculate Potential after 30 s, starting from 200 mV
## (vs Reference Electrode) into cathodic direction
## (reduction) by 5 mV/s
convert_time_to_var(15,var0 = 0.2,var.rate = - 0.005)
#
## Heating sample after 5 min starting from 293 K
## by the temperature rate of 0.5 K/s
convert_time_to_var(5,
                    time.unit = "min",
                    var0 = 293,
                    var.rate = 0.5)


}
