% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eval_kinR_EPR_modelFit.R
\name{eval_kinR_EPR_modelFit}
\alias{eval_kinR_EPR_modelFit}
\title{Radical Kinetic Models Fitted to Experimental Data}
\usage{
eval_kinR_EPR_modelFit(
  data.integs,
  time.unit = "s",
  time = "time_s",
  qvarR = "Area",
  model.react = "(n=1)R --> [k1] B",
  elementary.react = TRUE,
  params.guess = c(qvar0R = 0.001, k1 = 0.001),
  params.guess.lower = NULL,
  params.guess.upper = NULL,
  fit.kin.method = "diff-levenmarq",
  time.correct = FALSE,
  path_to_dsc_par = NULL,
  origin = NULL,
  ...
)
}
\arguments{
\item{data.integs}{Data frame object Integrals/Areas/Concentration \emph{vs.} Time}

\item{time.unit}{Character string ... argument/parameter... tbc}

\item{time}{Character string ... argument/parameter... tbc}

\item{qvarR}{Character string ... argument/parameter... tbc}

\item{model.react}{Character string denoting a specific radical (\code{"R"}) reaction related to
changes in integral intensities in EPR spectral time series. Arrow shows direction of the reaction
(\code{"-->"}, irreversible or \code{"<==>", reversible}). Rate constants are indicated by square
brackets after the arrows. Following examples of the reaction schemes are commonly used to describe
the integral intensity and/or radical concentration/amount changes during the EPR time series
experiment (the \code{m,n,l} stoichiometric coefficients may be varied, see below).
\tabular{ll}{
\strong{Reaction Scheme} \tab \strong{`model.react`} \cr
\eqn{(n=1)\text{R} \xrightarrow{k_1} \text{B}} \tab \code{"(n=1)R --> [k1] B"} \cr
 \eqn{(n=2)\text{A} \xrightarrow{k_1} (m=2)\text{R}} \tab \code{"(n=2)A --> [k1] (m=2)R"} \cr
 \eqn{(n=2)\text{A} \xrightarrow{k_1} (m=2)\text{R} \xrightleftharpoons[k_3]{k_2} (l=1)\text{C}} \tab
 \code{"(n=2)A --> [k1] (m=2)R <==> [k2] [k3] (l=1)C"} \cr
 \eqn{(n=1)\text{R} \xrightleftharpoons[k_2]{k_1} (m=1)\text{B}} \tab
 \code{"(n=1)R <==> [k1] [k2] (m=1)B"} \cr
 \eqn{(n=2)\text{A} \xrightleftharpoons[k_2]{k_1} (m=2)\text{R}} \tab
 \code{"(n=2)A <==> [k1] [k2] (m=2)R"} \cr
 \eqn{(n=1)\text{A} + (m=1)\text{B} \xrightarrow{k_1} (l=1)\text{R}} \tab
 \code{"(n=1)A + (m=1)B --> [k1] (l=1)R"} \cr
 \eqn{(n=1)\text{R} + (m=1)\text{B} \xrightarrow{k_1} (l=1)\text{C}} \tab
 \code{"(n=1)R + (m=1)B --> [k1] (l=1)C"} \cr
}
Couple of examples are also given in details. The function is relatively flexible and enables
later addition of any other reaction schemes describing the EPR time series experiments
(YOU MAY ASK DEVELOPER(S) via forum/help-channels). The stoichiometric coefficient (e.g. like \code{"(n=1)"}
or \code{"(m=1)"}) can be varied within the \code{model.react} character string.
Defined/Allowed values are e.g. 1,2,... or non-integer values like 1.5 or 2.1.
If \code{elementary.react = FALSE} (the model reaction is not considered as the elemental one) therefore,
a possible non-integer partial stoichiometric coefficients (like e.g. `alpha`,`beta` or `gamma`)
must be incl. in \code{kin.params} (see also \code{kin.params} below).}

\item{elementary.react}{Logical, if model reaction should be considered as an elementary one,
i.e. the stoichiometric coefficients equal to the partial reaction orders. Such reaction proceeds without
identifiable intermediate species forming. \strong{Default}: \code{elementary.react = TRUE}.
If \code{elementary.react = FALSE}, i.e. the \code{model.react} cannot be considered like an elementary one,
one must include the parameterized reaction orders \eqn{\alpha}, \eqn{\beta} or \eqn{\gamma} into
the \code{kin.params}, e.g like \code{kin.params = c(k1 = 0.01, qvar0A = 0.05, alpha = 1.5)}.}

\item{params.guess}{Named vector ... argument/parameter... tbc see also \code{kin.params}
in \code{\link{eval_kinR_ODE_model}}.}

\item{params.guess.lower}{Numeric vector, ... NULL, NO DEFAULTS ARE TO BE DEFINED...only in case
if other than \code{fit.kin.method = "diff-levenmarq"} applied}

\item{params.guess.upper}{Numeric vector, ... NULL, NO DEFAULTS ARE TO BE DEFINED ..only in case
if other than \code{fit.kin.method = "diff-levenmarq"} applied}

\item{fit.kin.method}{Character string pointing to optimization/fitting method. If the \strong{default}:
\code{fit.kin.method = "diff-levenmarq"} If one wants to estimate partial reaction orders
(\eqn{\alpha}, \eqn{\beta} or \eqn{\gamma}), i.e. in the case of \code{elementary.react = FALSE},
additional algorithms (except the \code{"levenmarq"}) introduced in \code{\link{optim_for_EPR_fitness}}
have to be applied.}

\item{time.correct}{Logical, if the time of the recorded series of EPR spectra needs to be corrected
(see also \code{\link{correct_time_Exp_Specs}}).}

\item{path_to_dsc_par}{Character string ... argument/parameter... tbc}

\item{origin}{Character string ... argument/parameter... tbc}

\item{...}{ddditional parameters for \code{\link[minpack.lm]{nls.lm}}
or \code{\link{optim_for_EPR_fitness}}.}
}
\value{
As a result of "kinetic" fit list with the following components is available:
  \describe{
  \item{df}{Data frame object with the variables/columns such as \code{time},
  experimental quantitative variable like \code{sigmoid_Integ} (sigmoid integral) or \code{Area}
  as well as concentration \code{c_M} of the relevant radical EPR spectrum and the corresponding
  quantitative variable \code{fitted} vector values .}
  \item{plot}{Plot/Graph object \emph{Quantitative variable} \emph{vs.} \emph{Time} with the experimental
  data and the corresponding fit.}
  \item{df.coeffs}{Data frame object. In case of \code{fit.kin.method = "diff-levenmarq"} it contains
  the optimized parameter values (\code{Estimates}), their corresponding \code{standard errors},
  \code{t-} and finally \code{p-values}. If the \code{fit.kin.method} is other than \code{"diff-levenmarq"}
  it summarizes the best parameter estimates.}
  \item{N.evals}{Total number of evaluations/iterations before the best fit is found. In case
  of particle swarm algorithm, \code{fit.kin.method = "pswarm"}, a three element vector containing
  the number of function evaluations, number of iterations and the number of restarts
  are displayed.}
  \item{sum.LSQ.min}{The minimal least-square sum after \code{N.evals}.}
  \item{convergence}{In case of \code{fit.kin.method = "diff-levenmarq"} it corresponds to residual sum
  of squares at each iteration/evaluation. The length of \code{convergence}
  is equal to the length of \code{N.evals}. If the \code{fit.kin.method} is other than \code{"diff-levenmarq"}
  the integer code indicates successful completion (> 0) or a possible error number (< 0).}
  }
}
\description{
A short description...(Integrals/Areas/Concentration \emph{vs.} Time)...
}
\examples{
\dontrun{
tbc
tbc
}


}
\seealso{
Other Evaluations and Quantification: 
\code{\link{eval_integ_EPR_Spec}()},
\code{\link{eval_kinR_ODE_model}()},
\code{\link{quantify_EPR_Abs}()},
\code{\link{quantify_EPR_Norm_const}()}
}
\concept{Evaluations and Quantification}
