% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smooth_EPR_Spec_by_npreg.R
\name{smooth_EPR_Spec_by_npreg}
\alias{smooth_EPR_Spec_by_npreg}
\title{Smoothing and Fitting of an EPR Spectrum by Splines}
\usage{
smooth_EPR_Spec_by_npreg(
  data.spectr,
  B = "B_mT",
  B.unit = "mT",
  lineSpecs.form = "derivative",
  Intensity = "dIepr_over_dB",
  method = "BIC",
  output.vec = FALSE,
  ...
)
}
\arguments{
\item{data.spectr}{Spectrum data frame object where the magnetic flux density (in \code{mT} or \code{G}) column
can be labeled as \code{Field} or \code{B_G} and that of the derivative intensity as \code{dIepr_over_dB}
or single integrated intensity like \code{Integrated_Intensity}, \code{index} column can be included as well.}

\item{B}{Character string pointing to magnetic flux density \code{column} of EPR spectrum data frame
\code{data.spectr} either in "millitesla" or in "gauss", that is \code{B = "B_mT"} (\strong{default})
or \code{B = "B_G"} or \code{B = "B_G_Sim"} to include simulated EPR spectra as well.}

\item{B.unit}{Character string denoting the magnetic flux density unit e.g. \code{B.unit = "G"}
(gauss, \strong{default}) or \code{B.unit = "mT"} (millitesla). These are the usual units used
for EPR spectra.}

\item{lineSpecs.form}{Character string describing either \code{"derivative"} (\strong{default}) or \code{"integrated"}
(i.e. \code{"absorption"} which can be used as well) line form of the analyzed EPR spectrum/data.}

\item{Intensity}{Character string pointing to \code{intensity column} if other than \code{dIepr_over_dB}
name/label is used (e.g. for simulated spectra), \strong{default}: \code{Intesity = "dIepr_over_dB"}}

\item{method}{Character string corresponding to method to fit a smoothing spline provided by \pkg{npreg}
package (see the \code{method} argument in \code{\link[npreg]{ss}}). The following methods are available
(they are shortly described
in \href{http://users.stat.umn.edu/~helwig/notes/smooth-spline-notes.html}{Nathaniel's E. Helwig Introduction}
or additional information may be found in \code{References}) =>
\tabular{ll}{
\strong{Method} \tab \strong{Short Description} \cr
"GCV" \tab Generalized Cross-Validation \cr
"OCV" \tab Ordinary Cross-Validation \cr
"GACV" \tab Generalized Approximate Cross-Validation \cr
"ACV" \tab Approximate Cross-Validation \cr
"REML" \tab Restricted Maximum Likelihood \cr
"ML" \tab Maximum Likelihood \cr
"AIC" \tab Akaike’s Information Criterion \cr
"BIC" \tab Bayesian Information Criterion \cr
}}

\item{output.vec}{Logical, whether the function output have to be vectorized, i.e. only the vector
of smoothed EPR intensity is provided. This is especially useful for the spectral (time) series EPR data,
which can be handily processed by \code{\link[dplyr]{group_by}} using the
`pipe` operators (\code{\link[magrittr]{\%>\%}}). \strong{Default}: \code{output.vec = NULL}.}

\item{...}{additional arguments passed to the function (see also \code{\link[npreg]{ss}} function).}
}
\value{
If \code{output.vec = TRUE} the output corresponds to vector of the smoothed EPR intensity
  (either dereivative \code{lineSpecs.form = "derivative"} or integrated
  \code{lineSpecs.form = "integrated"/"absorption"}) with the length of the original \code{Intensity}.
  Contrarily if the \code{output.vec} is set to \code{FALSE} the following list is returned =>
  \describe{
  \item{df}{Original data frame with the addition column corresponding to smoothed EPR intensity
  (derivative or integrated).}
  \item{plot}{Plot/Graph object \emph{EPR intensity} \emph{vs.} \emph{B} with the experimental
  data and its corresponding smoothed relationship performed by splines.}
  \item{rss}{Weighted (if the optional parameter \code{w} is defined) residual sum of squares.}
  \item{degs.freedom}{Equivalent degrees of freedom used.}
  \item{fit}{List with components to characterize the spline fit (Details see \code{fit} value
  in \code{\link[npreg]{ss}} function documentation).}
  \item{sigma}{Estimated error standard deviation.}
  \item{aic}{Akaike’s Information Criterion (if \code{method = "AIC"}). A negative number that has
  the largest modulus (deepest down in the negative territory) indicates the preferred model.}
  \item{bic}{Bayesian Information Criterion (if \code{method = "BIC"}). A negative number that has
  the largest modulus (deepest down in the negative territory) indicates the preferred model.}
  \item{log.likehood}{Likelihood logarithm if \code{method = "REML"/"ML"}. Log likelihood value
  is a measure of goodness of fit for any model. The higher the value, the better the model.}
  }
}
\description{
Smoothing of the EPR spectra by non-parametric fitting a smoothing spline \code{\link[npreg]{ss}}
  from \pkg{npreg} package.
}
\details{
The EPR spectrum is fitted by splines which, by default, correspond to cubic Bernoulli polynomial,
  like e.g.
  \deqn{I_{\text{EPR}}(B) = B^3 - (3/2)\,B^2 + (1/2)\,B}
  where \eqn{I_{\text{EPR}}} equals to general EPR intensity and \eqn{B} is the magnetic flux density.
  This may be applied to both derivative or single integrated EPR spectral forms. Also a higher/lower polynomial
  degree may be applied by the \code{method} (see the argument description) and by the \code{m} optional argument
  (see \code{...} additional arguments) which is a penalty order (integer). For the above-mentioned cubic
  spline/polynomial \code{m = 2}. Linear polynomial corresponds
  to \code{m = 1} and the highest quintic polynomial/spline is referred as \code{m = 3}:
  \deqn{I_{\text{EPR}}(B) = B^5 - (5/2)\,B^4 + (5/3)\,B^3 - (1/6)\,B}
  If the optional argument \code{bernoulli} is set to \code{FALSE} then "classic" definition
  of a smoothing spline, where the function estimate is a piece-wise polynomial function with pieces
  of degree 2m−1, is produced. Additional optional arguments from \code{\link[npreg]{ss}} like e.g. knots
  definition, equivalent degrees of freedom, vector of weights...etc. can be applied as well.
}
\examples{
\dontrun{
TODO
TODO
}


}
\references{
\insertRef{BerryCrossValid2021}{eprscope}

  \insertRef{ElezovicGeneral2016}{eprscope}

  \insertRef{WeissteinBernPol2023}{eprscope}

  \insertRef{HelwigMan2022}{eprscope}
}
\seealso{
Other Simulations and Optimization: 
\code{\link{eval_sim_EPR_iso}()},
\code{\link{eval_sim_EPR_isoFit}()},
\code{\link{eval_sim_EPR_iso_combo}()},
\code{\link{optim_for_EPR_fitness}()},
\code{\link{quantify_EPR_Sim_series}()}
}
\concept{Simulations and Optimization}
