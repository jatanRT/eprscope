% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readEPR_Exp_Specs_kin.R
\name{readEPR_Exp_Specs_kin}
\alias{readEPR_Exp_Specs_kin}
\title{Read and Process Spectral Data of Time Dependent CW EPR Experiments}
\usage{
readEPR_Exp_Specs_kin(
  name_root,
  dir_ASC,
  dir_dsc_par,
  time.unit = "s",
  time.delta.slice.s = NULL,
  col.names = c("index", "B_G", "time_s", "dIepr_over_dB"),
  colClasses = NULL,
  x = 2,
  x.unit = "G",
  Intensity = 4,
  time.series = 3,
  convertB.unit = TRUE,
  qValue = NULL,
  norm.vec.add = NULL,
  origin = "xenon"
)
}
\arguments{
\item{name_root}{Character string corresponding to entire `file name` without `extension`.}

\item{dir_ASC}{Character string, path (can be defined by \code{\link[base]{file.path}})
to directory where the `ASCII` spectral data is stored.}

\item{dir_dsc_par}{Character string, path (can be defined by \code{\link[base]{file.path}} character string)
to directory where the file (`.DSC`/`.dsc` or `.par`) with instrumental parameters (to calculate \eqn{g}-value
or normalize intensities) is stored.}

\item{time.unit}{Character string \strong{time unit} defined by \code{"s"},\code{"min"} or \code{"h"}.
\strong{Default}: \code{time.unit = "s"}}

\item{time.delta.slice.s}{Numeric, time span/interval in seconds between `slices`...TBC,
e.g. in case if \code{origin = "winepr"}. \strong{Default}: \code{time.delta.slice = NULL}.}

\item{col.names}{Character/String vector, inherited from \code{\link[data.table]{fread}}, corresponding to
column/variable names. A safe rule of thumb is to use column names incl. physical quantity notation
with its units, \code{Quantity_Unit} like \code{"B_G"}, \code{"RF_MHz"}, \code{"Bsim_mT"} (e.g. pointing
to simulated EPR spectrum abscissa)...etc, \strong{default}: \code{col.names = c("index","B_G",dIepr_over_dB)}.}

\item{colClasses}{List, inherited from \code{\link[data.table]{fread}}... TBC
e.g. like \code{colClasses = list(numeric = 1)} or by character string like \code{colClasses = c(V1 = "numeric")}
or \code{colClasses = list(numeric = "V1")} where in all cases `1` corresponds, to column index.
\strong{Default}: \code{colClasses = NULL}.}

\item{x}{Numeric index related to \code{col.names} pointing to independent variable, which corresponds
to abscissa (\eqn{x}-axis) in spectra or other plots.}

\item{x.unit}{Character string ...TBC only "mT" and "G" are available}

\item{Intensity}{Numeric index related to \code{col.names} pointing to `general` intensity,
like derivative intensity (`dIepr_over_dB`), integral one (e.g. `single_Integ`), double or sigmoid
integral (e.g. `Area`)...etc. This corresponds to column/vector which should be presented like
\eqn{y}-axis in spectra or other plots.}

\item{time.series}{Numeric index related to \code{col.names} pointing to `time` column for time series
EPR spectra changing upon time. If data contains simple relationship like \eqn{Area} vs \eqn{time}
use \code{x} and \code{x.unit} parameters/arguments instead. This parameter/argument is dedicated
to kinetic-like experiments. \strong{Default}: \code{time.series = 3}.}

\item{convertB.unit}{Logical (\strong{default}: \code{convertB.unit = TRUE}) description...
convert \eqn{B} in Gauss <=> millitesla...}

\item{qValue}{Numeric, Q value (quality factor, number) displayed at specific \code{dB} by spectrometer.
In case of "Xenon" software the parameter is included in \code{.DSC} file, therefore \strong{default}:
\code{qValue = NULL}. If EPR spectra were acquired by the "Winepr" software Q value must be defined
like \code{qValue = 3400}}

\item{norm.vec.add}{Numeric vector. Additional normalization constant in form of vector involving
all additional (in addition to \code{qValue}) normalization(s) like e.g. concentration, powder sample
weight, number of scans, ...etc (\code{norm.vec.add = c(2000,0.5,2)}). \strong{Default}:
\code{norm.vec.add = NULL}.}

\item{origin}{Character string corresponding to \strong{software} used to acquire the EPR spectra
on BRUKER spectrometers, i.e. whether they were recorded by the windows based softw. ("WinEpr",
\code{origin = "winepr"}) or by the Linux one ("Xenon"), \strong{default}: \code{origin = "xenon"}
Only the two above-mentioned  characters/strings are available due to reading parameter files.}
}
\value{
List of spectral data (incl. time) in tidy long table format (\code{df}) + corrected
   time vector (\code{time}).
}
\description{
The function reads (based on \code{\link{readEPR_Exp_Specs}}) the continuous wave (CW)
 EPR time series spectral data (recorded by e.g. `2D_Field_Delay Experiment` in "Xenon"
 acquisition/processing software). Function includes automatic time correction for CW EPR
 \code{time.series} experiments (see also \code{\link{correct_time_Exp_Specs}}).
}
\examples{
\dontrun{
## Reading by the "Xenon" software
readEPR_Exp_Specs_kin("Sample_spectra_irradiation",
                      file.path(".","ASCII_data_dir"),
                      file.path(".","dsc_data_dir")
                      )

## Reading by the "WinEPR" software
readEPR_Exp_Specs_kin("Sample_spectra_irradiation",
                      file.path(".","ASCII_data_dir"),
                      file.path(".","dsc_data_dir"),
                      time.unit = "s",
                      time.delta.slice.s = 24.1,
                      col.names = c("index",
                                    "B_G",
                                    "Slice",
                                    "Intensity"),
                      colClasses = NULL,
                      x = 2,
                      x.unit = "G",
                      Intensity = 4,
                      time.series = 2,
                      qValue = 2900,
                      origin = "winepr")

}


}
\seealso{
Other Data Reading: 
\code{\link{readEPR_Exp_Specs_multif}()},
\code{\link{readEPR_Exp_Specs}()},
\code{\link{readEPR_Sim_Spec}()},
\code{\link{readEPR_param_slct}()},
\code{\link{readEPR_params_slct_kin}()},
\code{\link{readEPR_params_slct_quant}()},
\code{\link{readEPR_params_slct_sim}()},
\code{\link{readEPR_params_tabs}()},
\code{\link{readEPR_solvent_props}()},
\code{\link{readMAT_params_file}()}
}
\concept{Data Reading}
