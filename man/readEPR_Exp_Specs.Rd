% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readEPR_Exp_Specs.R
\name{readEPR_Exp_Specs}
\alias{readEPR_Exp_Specs}
\title{Read the EPR Experimental ASCII or other Text-Based Data.}
\usage{
readEPR_Exp_Specs(
  path_to_ASC,
  sep = "auto",
  skip = 1,
  header = FALSE,
  col.names = c("index", "B_G", "dIepr_over_dB"),
  x.id = 2,
  x.unit = "G",
  Intensity.id = 3,
  time.series.id = NULL,
  convertB.unit = TRUE,
  qValue = NULL,
  norm.vec.add = NULL,
  origin = "xenon",
  ...
)
}
\arguments{
\item{path_to_ASC}{Character string, path to ASCII file/table (e.g. in \code{.txt}, \code{.csv}
or \code{.asc} format) with spectral data (\eqn{Intensity} vs \eqn{B}, Field) with additional
\code{index} and/or \code{time} variables). The path can be also defined by the \code{\link[base]{file.path}} function.}

\item{sep}{ The separator between columns. Defaults to the character in the set \code{[,\\t |;:]} that separates the sample of rows into the most number of lines with the same number of fields. Use \code{NULL} or \code{""} to specify no separator; i.e. each line a single character column like \code{base::readLines} does.}

\item{skip}{ If 0 (default) start on the first line and from there finds the first row with a consistent number of columns. This automatically avoids irregular header information before the column names row. \code{skip>0} means ignore the first \code{skip} rows manually. \code{skip="string"} searches for \code{"string"} in the file (e.g. a substring of the column names row) and starts on that line (inspired by read.xls in package gdata). }

\item{header}{ Does the first data line contain column names? Defaults according to whether every non-empty field on the first data line is type character. If so, or TRUE is supplied, any empty column names are given a default name. }

\item{col.names}{Character string vector, inherited from \code{\link[data.table]{fread}}, corresponding to
column/variable names. A safe rule of thumb is to use column names incl. physical quantity notation
with its unit, \code{Quantity_Unit} like \code{"B_G"}, \code{"RF_MHz"}, \code{"Bsim_mT"} (e.g. pointing
to simulated EPR spectrum abscissa)...etc, \strong{default}: \code{col.names = c("index","B_G",dIepr_over_dB)}.
The default (for the original \code{\link[data.table]{fread}}) is to use the header column
if present or detected, or if not the name is denoted as \code{"V"} followed by the column number.}

\item{x.id}{Numeric index related to \code{col.names} vector pointing to independent variable, which corresponds
to abscissa (\eqn{x}-axis) in the spectra or other plots.}

\item{x.unit}{Character string corresponding to original \code{x} variable/column unit, e.g. like \code{"G"},
\code{"mT"} or \code{"MHz"}.}

\item{Intensity.id}{Numeric index related to \code{col.names} vector pointing to \code{general} intensity,
like derivative intensity (\code{dIepr_over_dB}), integral one (e.g. \code{single_Integ}), double or sigmoid
integral (e.g. \code{Area})...etc. This corresponds to column/vector which should be presented like
\eqn{y}-axis in the EPR spectra or other plots.}

\item{time.series.id}{Numeric index related to \code{col.names} vector and pointing to \code{time} column for time series
EPR spectra. If data contains simple relationship like \eqn{Area} vs \eqn{time}
use \code{x} and \code{x.unit} parameters/arguments instead (see also examples). This parameter/argument is dedicated
to kinetic-like experiments. \strong{Default}: \code{time.series.id = NULL}.}

\item{convertB.unit}{Logical (\strong{default}: \code{convertB.unit = TRUE}) whether upon reading an automatic
conversion from \code{G} into \code{mT} should be performed. If default is chosen, a new column/variable
\eqn{B} in \code{mT} is created.}

\item{qValue}{Numeric, Q value (quality factor, number) displayed at specific \code{dB} by spectrometer,
in case of \emph{Xenon} or \emph{new Magnettech} software the parameter is included in \code{.DSC}/\code{.dsc} file,
\strong{default}: \code{qValue = NULL}, which actually corresponds to value \code{1}.}

\item{norm.vec.add}{Numeric vector. Additional normalization constant in form of vector including
all additional (in addition to \code{qValue}) normalization(s) like concentration, powder sample
weight, number of scans, ...etc. (e.g. like \code{norm.vec.add = c(2000,0.5,2)}). \strong{Default}:
\code{norm.vec.add = NULL}, which actually corresponds to value \code{1}. If \code{qValue = NULL},
the Q-factor/value might be also included in the \code{norm.vec.add}.}

\item{origin}{String/Character corresponding to \strong{origin} of the ASCII data, like from
most common spectrometers (from which are data loaded automatically using the default parameters).
Options are summarized in the following table (Any other specific \code{origin} may be added later) =>
\tabular{rl}{
\strong{String} \tab \strong{Description} \cr
"xenon" \tab \strong{default} automatically loads data from the "Xenon" software with dafault params. \cr
"winepr" \tab automatically loads data from the "WinEpr" software. \cr
"magnettech" \tab automatically loads data from the new "Magnettech" software. \cr
"other" (arbitrary string, e.g. like "csv") \tab general, loads any other original
data like \code{csv}, \code{txt}, \code{asc} incl. also data from other instrumental/spectrometer software.
\strong{In such case all the parameters/arguments for}
\code{readEPR_Exp_Specs} \strong{have to be set up accordingly}. \cr
}}

\item{...}{additional arguments specified (see also \code{\link[data.table]{fread}}).}
}
\value{
Data frame/table consisting of the magnetic flux density
  column \code{B_mT} in millitesla (as well as \code{B_G} in gauss) or \code{RF_MHz} (in case of ENDOR spectrum)
  or unitless \code{g-factor} and of the derivative intensity column (\code{dIepr_over_dB}) or any other
  intensities (like in integrated spectral form) in \code{procedure defined unit}
  (see \href{http://www.iupac.org/divisions/VII/VII.C.1/C-NPU_Uppsala_081023_25_minutes_confirmed.pdf}{p.d.u.}),
  which is normalized by the above-described parameters
  and finally the \code{index} and/or a \code{time} (in the case of time series experiment) columns
  are displayed as well.
}
\description{
The function is based on the \code{\link[data.table]{fread}} with the purpose to read
  the experimental EPR/ENDOR spectra or other original (pre-processed) data from the EPR spectrometers
  in tabular ASCII format (e.g. like \code{.txt}, \code{.csv} or \code{.asc}).
}
\details{
ASCII data are transformed into \emph{R} data frames, which can be then easily processed by this or other
  R packages, e.g. like \pkg{dplyr}), afterwards. Spectral intensities are automatically
  normalized by the common experimental parameters like Q-factor, concentration, weight...etc.
  These are defined by the two arguments:
  \code{qValue} and \code{norm.vec.add}. The latter actually corresponds to values of the above-mentioned
  quantities represented by the vector. If \code{qValue = NULL}, the Q-value ca be also defined a component
  of the \code{norm.vec.add}. Finally, the normalized intensity is calculated by the following
  expression:
  \deqn{dI_{EPR} / dB = Original~Intensity \, \prod_{k} 1/(norm.vec.add[k])}
  where \eqn{k} is iterating through all components of the \code{norm.vec.add} (\eqn{norm.vec.add[k]}).
  The structure of ASCII files/tables depends on the origin/software used to acquire the EPR spectra.
  This is mirrored mainly by the \code{origin} parameter/argument. Default arguments are set to read the data from
  \emph{Xenon} acquisition/processing software. However, additional \code{origins} can be set like
  \code{origin = "winepr"} or \code{origin = "magnettech"} or even any arbitrary string
  e.g. like \code{origin = "csv"} (see also \code{origin argument}). Time series (time evolution
  of EPR spectra/kinetics) is defined by the \code{time.series.id} parameter. In such case the ASCII data table
  also contains additional column either with recorded time (see also \code{\link{correct_time_Exp_Specs}})
  or with slice number for each spectrum.
}
\examples{
## simple EPR spectrum acquired by "xenon"
## and with `B` conversion "G" <=> "mT"
## Loading the data
aminoxyl.data.path <-
load_data_example(file = "Aminoxyl_radical_a.txt")
aminoxyl.data.01 <- readEPR_Exp_Specs(aminoxyl.data.path,
                                      qValue = 2100)
## preview
head(aminoxyl.data.01)
#
# simple EPR spectrum acquired by "xenon"
## and without `B` conversion "G" <=> "mT"
aminoxyl.data.02 <- readEPR_Exp_Specs(aminoxyl.data.path,
                                      convertB.unit = FALSE,
                                      qValue = 2100)
## preview
head(aminoxyl.data.02)
#
## the simple spectrum acquired by "winepr"
## (and 20 scans) on a 1 mM sample concentration:
## Loading the data
TMPD.data.path <-
load_data_example(file = "TMPD_specelchem_accu_b.asc")
TMPD.data <- readEPR_Exp_Specs(TMPD.data.path,
                               col.names = c("B_G","dIepr_over_dB"),
                               x.id = 1,
                               Intensity.id = 2,
                               qValue = 3500,
                               norm.vec.add = c(20,0.001),
                               origin = "winepr")
## preview
head(TMPD.data)
#
## the ENDOR spectrum recorded by "xenon"
## and 8 accumulation sweeps
## loading the data
PNT.ENDOR.data.path <-
load_data_example(file = "PNT_ENDOR_a.txt")
PNT.ENDOR.data <-
readEPR_Exp_Specs(PNT.ENDOR.data.path,
                  col.names = c("index",
                                "RF_MHz",
                                "dIepr_over_dB"),
                  x.id = 2,
                  x.unit = "MHz",
                  Intensity.id = 3,
                  norm.vec.add = 8)
## preview
head(PNT.ENDOR.data)
#
## reading data file from (and pre-processed) by the "Xenon"
## software corresponding to kinetics with `Area` and `time`
## columns/variables , these two have to be selected from
## several others + normalize `Area` against the `qValue`,
## first of all load the path of package example file
triarylamine.rc.decay.path <-
load_data_example("Triarylamine_radCat_decay_a.txt")
## data
triarylamine.rc.decay.data <-
readEPR_Exp_Specs(path_to_ASC = triarylamine.rc.decay.path,
                  header = TRUE,
                  fill = TRUE,
                  select = c(3,7),
                  col.names = c("time_s","Area"),
                  x.unit = "s",
                  x.id = 1,
                  Intensity.id = 2,
                  qValue = 1700) \%>\% na.omit()
## preview
head(triarylamine.rc.decay.data)
#
\dontrun{
## EPR time series acquired by "Winepr"/"WinEpr"
readEPR_Exp_Specs(path_to_ASC,
                  col.names = c("B_G",
                                "Slice",
                                "dIepr_over_dB"),
                  x.id = 1,
                  Intensity.id = 3,
                  time.series.id = 2,
                  origin = "Winepr")
#
## example for "xenon" time series experiment
## (evolution of EPR spectra in time, e.g. in case of
## EPR spectroelectrochemistry or photochemistry):
## together with `B` conversion "G" <=> mT
## and intensity normalized against `qValue`
readEPR_Exp_Specs(path_to_ASC,
                  col.names = c("index",
                                "B_G",
                                "time_s",
                                "dIepr_over_dB"),
                  x.id = 2,
                  Intensity.id = 4,
                  qValue = 2800,
                  time.series.id = 3)
#
## reading simple spectrum from the new "magnettech"/"Magnettech"
## acquisition software
readEPR_Exp_Specs("./Data/EPR_spectrum.csv",
                  col.names = c("B_mT","dIepr_over_dB"),
                  x.id = 1,
                  x.unit = "mT",
                  Intensity.id = 2,
                  origin = "magnettech")
#
}


}
\seealso{
Other Data Reading: 
\code{\link{readEPR_Exp_Specs_kin}()},
\code{\link{readEPR_Exp_Specs_multif}()},
\code{\link{readEPR_Sim_Spec}()},
\code{\link{readEPR_param_slct}()},
\code{\link{readEPR_params_slct_kin}()},
\code{\link{readEPR_params_slct_quant}()},
\code{\link{readEPR_params_slct_sim}()},
\code{\link{readEPR_params_tabs}()},
\code{\link{readEPR_solvent_props}()},
\code{\link{readMAT_params_file}()}
}
\concept{Data Reading}
